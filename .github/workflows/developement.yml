


run-name: ${{ github.actor }} - ${{ github.ref_name }}

on:
  workflow_call:
    inputs:
      environment:
        required: true
        description: 'Environment to deploy to'
        type: string
      version:
        required: true
        description: 'Version of the image to deploy'
        type: string
      helm-values-path:
        description: 'Path to the helm values file'
        type: string
        default: './helm-charts/todoapp/values.yaml'

      helm-release-name:
        description: 'Name of the helm release'
        type: string
        default: 'todoapp'
jobs:
  helm-deploy:
    runs-on: ubuntu-latest
    name: ${{ inputs.environment}}
    environment: ${{ inputs.environment }}
    steps:


      - name: Download Helm Package
        uses: actions/download-artifact@v4
        with:
          name: helm-package
          path: .


      - name: Download Helm Artifacts
        uses: actions/download-artifact@v4
        with:
          name: helm-artifacts
          path: .


      - name: Set Up Helm
        uses: azure/setup-helm@v4.2.0


      - name: Set Up Kubectl
        uses: azure/setup-kubectl@v4

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create Kind Cluster
        uses: helm/kind-action@v1
        with:
          cluster_name: todoapp
          config: cluster.yml

      - name: Helm Install Dry Run
        run: helm install todoapp ./helm-charts/todoapp/ --dry-run

      - name: List files for debug
        run: |
          echo "Current directory:"
          pwd
          echo "Listing files:"
          ls -R
      - name: Helm Install
        run: |

          helm upgrade --install --atomic --debug --wait --timeout 3m0s \
          ${{ inputs.helm-release-name }} ./todoapp-*.tgz \
          -f ${{ inputs.helm-values-path }} \
          --set mysql.secrets.MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }} \
          --set mysql.secrets.MYSQL_USER=${{ secrets.MYSQL_USER }} \
          --set mysql.secrets.MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
          --set todoapp.secrets.SECRET_KEY=${{ secrets.SECRET_KEY }} \
          --set todoapp.secrets.DB_NAME=${{ secrets.DB_NAME }} \
          --set todoapp.secrets.DB_USER=${{ secrets.DB_USER }} \
          --set todoapp.secrets.DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
          --set todoapp.secrets.DB_HOST=${{ secrets.DB_HOST }} \
          --set todoapp.image.repository=${{ secrets.DOCKERHUB_USERNAME }}/todoapp \
          --set todoapp.image.tag="${{ inputs.version }}"

